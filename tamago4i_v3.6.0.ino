#include <charMap.h>
#include <icons_7x7.h>
#include <icons_8x8.h>
#include <GyverOLED.h>
#include <stdlib.h>
#include <time.h>
#include <Wire.h>
#include <elapsedMillis.h>
#include <SPI.h>
#include <EEPROM.h>
#include <DHT11.h>
#include <microDS3231.h>


#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_SPI_SPEED 4000000ul
#define LASER 3
#define BUTTON_D 9
#define BUTTON_C 10
#define BUTTON_B 11
#define BUTTON_A 12
#define HT_SENSOR 2
#define DIOD 3
#define SENSOR_LIGHT A3
#define VOLTAGE A2
#define ICON_WIDTH 25
#define NUM_PET_CONDITIONS 8



GyverOLED<SSD1306_128x64, OLED_BUFFER> oled;
MicroDS3231 rtc;
DHT11 dht11(HT_SENSOR);
                            
const uint8_t happy[] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xE0, 0xF0, 0x18, 0x78, 0xE0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0x38, 0x1C, 0x2E, 0x66, 0x43, 0xC3, 0x83, 0xFE, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xFE, 0x3F, 0x01, 0x07, 0x1E, 0x78, 0xE0, 0x81, 0x01, 0x83, 0xC6, 0x6C, 0xBC, 0x18, 0x30, 0x30, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x30, 0x30, 0xD8, 0xF8, 0x0C, 0x0E, 0x37, 0xF3, 0x41, 0x04, 0x1C, 0x30, 0x27, 0x37, 0x17, 0xC0, 0xF3, 0x3F, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFE, 0x3F, 0x01, 0x00, 0x00, 0x00, 0xE0, 0xF0, 0x61, 0xC7, 0x1E, 0x7B, 0xE0, 0xC3, 0x87, 0x17, 0x17, 0x18, 0x0F, 0x00, 0x00, 0x0C, 0x0C, 0x18, 0x18, 0x38, 0x39, 0x38, 0x38, 0x3C, 0x3C, 0x3C, 0x1E, 0x1E, 0x0F, 0x02, 0x80, 0xF0, 0xFE, 0x1F, 0x03, 0x00, 
	0x00, 0x00, 0x00, 0x80, 0xF0, 0x7F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x07, 0x00, 0x01, 0x03, 0x06, 0x1C, 0x39, 0x71, 0xE7, 0xCE, 0x9C, 0x38, 0x38, 0x70, 0xE0, 0x60, 0xC0, 0xC0, 0xC0, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0x70, 0x3E, 0x0F, 0x03, 0x00, 0x00, 0x00, 0x00, 
	0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0x00, 0x00, 0x80, 0x80, 0xC0, 0x70, 0x3C, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x07, 0x06, 0x7E, 0xCC, 0x8C, 0x0D, 0x1D, 0x19, 0x19, 0xF8, 0xDC, 0x8C, 0x86, 0x03, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x01, 0x01, 0x00, 0x00, 0x00, 0x02, 0x03, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x70, 0x60, 0xC0, 0x60, 0x60, 0x30, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x07, 0x0E, 0x1E, 
};
const uint8_t sad[] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0x70, 0x38, 0x18, 0x0C, 0x06, 0x06, 0x07, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x83, 0x83, 0xC3, 0x63, 0x67, 0x37, 0x3E, 0x1E, 0x1C, 0x1C, 0x18, 0x38, 0x78, 0xC8, 0x88, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x02, 0x02, 0xC2, 0xE2, 0x7A, 0x3E, 0x0F, 0x07, 0x87, 0x86, 0xCC, 0xCC, 0xDC, 0xF8, 0xF0, 0xE0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x7F, 0x0F, 0xF3, 0x39, 0x0C, 0x06, 0x07, 0x03, 0x03, 0x7F, 0xE7, 0xC6, 0xCC, 0xF8, 0xF1, 0xCF, 0x1E, 0x78, 0xE0, 0x80, 0x00, 0x00, 0x00, 0x00, 
	0xF0, 0x7C, 0x0F, 0x03, 0x01, 0xFC, 0xFE, 0x67, 0x63, 0x77, 0x3F, 0x07, 0x00, 0x00, 0x00, 0x00, 0x81, 0xFF, 0x7F, 0x04, 0x00, 0xC0, 0xC0, 0xC0, 0x40, 0xE0, 0xE3, 0x67, 0x6C, 0x7C, 0x78, 0x78, 0xF0, 0xF0, 0xE0, 0x60, 0x60, 0x60, 0x38, 0x1F, 0x00, 0x00, 0x01, 0x07, 0x3E, 0x78, 0xE0, 0x80, 
	0xFF, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x07, 0x06, 0x0C, 0x04, 0x06, 0x06, 0x06, 0x07, 0x03, 0xE1, 0xF9, 0x3E, 0x67, 0x63, 0x33, 0x3F, 0x0F, 0x08, 0x08, 0x0F, 0x87, 0x86, 0x84, 0xC6, 0xE6, 0x33, 0x31, 0x31, 0x03, 0x03, 0x07, 0x06, 0x06, 0x1C, 0x38, 0xF0, 0xC0, 0x00, 0x00, 0x7F, 0xFF, 
	0x0F, 0x3F, 0xF8, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xF0, 0x7F, 0x01, 0x00, 0x00, 0x00, 0x00, 0x98, 0xDC, 0xC6, 0xC3, 0xC1, 0xC1, 0xF1, 0xB9, 0x19, 0x88, 0xD8, 0x78, 0x7C, 0x3E, 0x37, 0x33, 0x31, 0x31, 0x3E, 0x1E, 0x0F, 0x01, 0x00, 0x00, 0x80, 0xFF, 
	0x00, 0x00, 0x01, 0x3F, 0xFF, 0xCC, 0x18, 0x30, 0x30, 0x60, 0x60, 0xC0, 0x80, 0x86, 0x0F, 0x0D, 0x1E, 0x12, 0x13, 0x13, 0x12, 0x1E, 0x1F, 0x19, 0x18, 0x08, 0x0C, 0x0F, 0x07, 0x03, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xE0, 0x78, 0x1E, 0x07, 0x01, 
};
const uint8_t sleep[] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0x70, 0x38, 0x1C, 0x06, 0x03, 0x03, 0x03, 0x01, 0x01, 0x03, 0x03, 0x03, 0x07, 0x06, 0x06, 0x06, 0x04, 0x0C, 0x0C, 0x0C, 0x18, 0x18, 0x18, 0x30, 0x30, 0x70, 0x60, 0x60, 0x60, 0xC0, 0xC0, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xF8, 0x1C, 0x0E, 0x07, 0x03, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8C, 0x86, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x78, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x03, 0x07, 0x0E, 0x1C, 0xF8, 0xC0, 0x00, 
	0x07, 0x1E, 0xF8, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x07, 0x06, 0x04, 0x0C, 0x08, 0x08, 0x08, 0x0C, 0x06, 0x03, 0x00, 0x00, 0x00, 0x02, 0x3E, 0x6E, 0xC4, 0x80, 0x80, 0x00, 0x00, 0x00, 0x80, 0xC0, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x0F, 0xFC, 
	0x00, 0x00, 0x01, 0x07, 0x0F, 0x1C, 0x70, 0xE0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x06, 0x06, 0x06, 0x06, 0x0E, 0x0C, 0x0C, 0x18, 0x18, 0x70, 0xE0, 0xC0, 0x80, 0x80, 0xC0, 0xC1, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xF8, 0x1C, 0x0E, 0x07, 0x03, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x07, 0x0E, 0x0C, 0x18, 0xF8, 0xF0, 0xE0, 0xC0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x08, 0x3E, 0x3F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x01, 0x03, 0x03, 0x06, 0x0E, 0x0C, 0x0C, 0x18, 0x18, 0x18, 0x30, 0x30, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x30, 0x30, 0x1C, 0x0F, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 
};
const uint8_t mem[] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0x70, 0x38, 0x1C, 0x06, 0x03, 0x03, 0x03, 0x01, 0x01, 0x03, 0x03, 0x03, 0x07, 0x06, 0x06, 0x06, 0x84, 0x0C, 0x0C, 0x0C, 0x08, 0x18, 0x18, 0x30, 0x30, 0x70, 0x60, 0x60, 0x60, 0xC0, 0xC0, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xF8, 0x1C, 0x0E, 0x07, 0x03, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0x10, 0x10, 0x10, 0xF0, 0xE0, 0xE0, 0xC0, 0x80, 0x80, 0xC1, 0xC7, 0x6E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x70, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x03, 0x07, 0x0E, 0x1C, 0xF8, 0xC0, 0x00, 
	0x07, 0x1E, 0xF8, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x83, 0x07, 0x06, 0x04, 0x0C, 0x09, 0x09, 0x09, 0x0C, 0x06, 0x03, 0x00, 0x00, 0x00, 0x02, 0x3E, 0x6E, 0xCC, 0x8C, 0xB8, 0x38, 0x30, 0x30, 0x90, 0xD0, 0x7C, 0x0E, 0x07, 0x02, 0x00, 0x00, 0x03, 0x0F, 0xFC, 
	0x00, 0x00, 0x01, 0x07, 0x0F, 0x1C, 0x70, 0xE0, 0xC0, 0x80, 0x00, 0x04, 0x1F, 0x11, 0x01, 0x00, 0x00, 0x0C, 0x06, 0x46, 0x66, 0x66, 0xCE, 0xCC, 0x8C, 0x18, 0x18, 0x30, 0x60, 0x00, 0x00, 0x30, 0xF0, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xF8, 0x1C, 0x0E, 0x07, 0x03, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x07, 0x0E, 0x0C, 0x18, 0xF8, 0xF0, 0xE0, 0xC0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x06, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x01, 0x03, 0x03, 0x06, 0x0E, 0x0C, 0x0C, 0x18, 0x18, 0x18, 0x30, 0x30, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x30, 0x30, 0x1C, 0x0F, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 
};
const uint8_t temp[] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xFE, 0x06, 0xC3, 0xC3, 0x06, 0xFE, 0xF8, 0x00, 0x00, 0x90, 0x48, 0x24, 0x48, 0x90, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0x70, 0x3F, 0x9F, 0xC0, 0xF6, 0xFF, 0xC0, 0x9F, 0x3F, 0x70, 0xE0, 0x84, 0x02, 0x01, 0x02, 0x04, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x1F, 0x38, 0x70, 0x67, 0xCF, 0xCF, 0xCF, 0xCF, 0x67, 0x70, 0x38, 0x1F, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 
};
const uint8_t hum[] PROGMEM = {
	0x00, 0x80, 0xE0, 0x70, 0x39, 0x3F, 0x2F, 0x23, 0x23, 0x23, 0x23, 0x23, 0x63, 0x43, 0xC3, 0xC3, 0xC3, 0x4F, 0x5F, 0x39, 0x70, 0xE0, 0x80, 0x00, 
	0xFE, 0xFF, 0x03, 0x00, 0x00, 0xE0, 0xE0, 0xC0, 0xE0, 0xF0, 0xF8, 0xF8, 0xF0, 0xF0, 0xA0, 0xE1, 0x40, 0x08, 0x1C, 0x08, 0x00, 0x03, 0xFF, 0xFE, 
	0x00, 0x07, 0x0F, 0x1C, 0x38, 0x71, 0xE1, 0xC0, 0xC1, 0xC1, 0xC3, 0xC3, 0xC3, 0xC3, 0xC1, 0xC1, 0xC0, 0x60, 0x70, 0x38, 0x1C, 0x0F, 0x07, 0x00, 
};
const uint8_t shit[] PROGMEM = {
	0x08, 0x18, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x63, 0x31, 0x18, 0x18, 0x30, 0x60, 0xC0, 0x80, 0x06, 0x04, 0x20, 0x60, 0x00, 0x00, 0x0C, 0x04, 0x00, 
	0x00, 0xC0, 0x42, 0xF3, 0x9C, 0x04, 0x37, 0x4A, 0x5A, 0x4E, 0x34, 0x00, 0x04, 0x36, 0x4B, 0x59, 0x4B, 0x36, 0x0C, 0xB8, 0xE0, 0x40, 0xC8, 0x0C, 
	0x1E, 0x13, 0x30, 0x20, 0xE1, 0x81, 0xC1, 0x60, 0x23, 0x25, 0x2B, 0x29, 0x2D, 0x29, 0x25, 0x23, 0x20, 0x21, 0x21, 0x21, 0x20, 0x30, 0x19, 0x0F, 
};
const uint8_t angry[] PROGMEM = {
	0x00, 0x00, 0x80, 0xC0, 0xE0, 0x70, 0x38, 0xD8, 0xD8, 0x18, 0x18, 0x0C, 0x0C, 0x1C, 0x98, 0x98, 0x18, 0x38, 0x70, 0xE0, 0xC0, 0x80, 0x00, 0x00, 
	0xC0, 0xFC, 0xFF, 0xFF, 0xFE, 0xFC, 0xFC, 0x3C, 0x19, 0x1B, 0x7B, 0x7B, 0x78, 0x7B, 0x3B, 0x19, 0xBC, 0xFC, 0xFC, 0xFE, 0xFF, 0xFF, 0xFC, 0xC0, 
	0x01, 0x03, 0x07, 0x0F, 0x0F, 0x0F, 0x1F, 0x1D, 0x18, 0x1C, 0x1E, 0x1E, 0x1E, 0x1E, 0x18, 0x18, 0x1C, 0x1F, 0x0F, 0x0F, 0x0F, 0x07, 0x03, 0x01, 
};
const uint8_t health[] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xF0, 0x08, 0x04, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x04, 0x08, 0xF0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xC0, 0x30, 0x18, 0x1C, 0x0C, 0xEF, 0xEF, 0x9F, 0x1C, 0x3D, 0xB9, 0x89, 0xC9, 0xF9, 0x3D, 0x1C, 0x9F, 0xEF, 0xEF, 0x0C, 0x1C, 0x18, 0x30, 0xC0, 
	0x03, 0x00, 0x00, 0x20, 0x40, 0x40, 0x43, 0x63, 0x66, 0x30, 0x3F, 0x1F, 0x1F, 0x3F, 0x70, 0x66, 0x67, 0x43, 0x40, 0x40, 0x20, 0x00, 0x00, 0x03, 
};
const uint8_t slep[] PROGMEM = {
	0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x0C, 0x1E, 0x1E, 0x0C, 0x80, 0x80, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x03, 0x07, 0x07, 0x03, 0x00, 0xF0, 0xFC, 0x1E, 0x07, 0x03, 0x01, 0x01, 0x00, 0x0F, 0x3F, 0x70, 0xE0, 0xC0, 0x80, 0x80, 0x80, 0x80, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x0F, 0x1E, 0x38, 0x70, 0x60, 0xE0, 0xC0, 0xC0, 0xC0, 0xC0, 0xE0, 0x60, 0x71, 0x39, 0x1F, 0x0F, 0x03, 
};
const uint8_t cold[] PROGMEM = {
	0x00, 0x40, 0xE0, 0xC0, 0xB0, 0xF0, 0x80, 0x00, 0x00, 0x0C, 0x98, 0xFF, 0xFF, 0x98, 0x0C, 0x00, 0x00, 0x80, 0xF0, 0xB0, 0xC0, 0xE0, 0x40, 0x00, 
	0x00, 0x00, 0x42, 0x42, 0xC3, 0xC3, 0xC3, 0xFF, 0xE7, 0xA5, 0xBD, 0xFF, 0xFF, 0xBD, 0xA5, 0xE7, 0xFF, 0xC3, 0xC3, 0xC3, 0x42, 0x42, 0x00, 0x00, 
	0x00, 0x02, 0x07, 0x03, 0x0D, 0x0F, 0x01, 0x00, 0x00, 0x30, 0x19, 0xFF, 0xFF, 0x19, 0x30, 0x00, 0x00, 0x01, 0x0F, 0x0D, 0x03, 0x07, 0x02, 0x00, 
};
const uint8_t crying[] PROGMEM = {
	0xFE, 0xFF, 0x03, 0x03, 0x03, 0x03, 0x03, 0x83, 0x83, 0x83, 0x03, 0x0B, 0x3B, 0x0B, 0x03, 0xFF, 0xFE, 0x0C, 0x58, 0xD8, 0x58, 0x38, 0xF0, 0xE0, 
	0xFF, 0xFF, 0x00, 0x00, 0x80, 0x1E, 0x1F, 0x5F, 0x7F, 0x5F, 0x1F, 0x1E, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x01, 0xF0, 0xFF, 0x0F, 0x01, 
	0x0F, 0x1F, 0x18, 0x1A, 0x1B, 0x1A, 0x18, 0x18, 0x18, 0x18, 0x38, 0x38, 0x78, 0x58, 0xD8, 0xDF, 0xCF, 0xC0, 0xF0, 0x7F, 0x0F, 0x00, 0x00, 0x00, 
};

enum tama_state {ST_HAPPY, ST_OK, ST_SAD, ST_SLEEPING};
enum PetState { HUNGRY, SLEEPY, PLAY, THIRSTY, SHIT, HEALTH, COLD, TEMP, INACTIVE }; 

struct {
  int temperat;
  int light;
  int humidity;
  float voltage;
} sensor;

struct {
	enum tama_state state;
  int age;
  int day;
	int sleep;
  int health;
  int food;
  int water;
  int game;
  int shit;
  int happiness;
  bool flag = false;
  bool ShitFlag = false;
  uint32_t timer;
} tama;

struct {
  int A;
  int B;
  int C;
  int D;
  int UP;
  bool flag = false;
  uint32_t timer;
} button;

struct PetCondition {
    PetState state;                                                           // Состояние питомца
    const unsigned char* icon;                                                // Указатель на иконку
};

struct{
  const int paddleWidth = 20;   // Ширина ракетки
  const int paddleHeight = 4;    // Высота ракетки
  const int ballSize = 3;        // Размер мяча
  int paddleX = SCREEN_WIDTH / 2 - paddleWidth / 2; // Начальная позиция ракетки
  int paddleY = SCREEN_HEIGHT - paddleHeight - 2;         // Позиция ракетки
  int ballX = SCREEN_WIDTH / 2;                      // Х координата мяча
  int ballY = SCREEN_HEIGHT / 2;                     // Y координата мяча
  int ballXSpeed = -1;                                // Скорость мяча по X
  int ballYSpeed = -1;                               // Скорость мяча по Y   
} game;

const int scoreLevels[] = {2, 4, 6, 8}; 

const int ICONS_PER_PAGE = 6; // icon
const int menuCount = 6;      // menu
const int MAX_ICONS = 8;      // icon

int currentStartIndex = 0;  // icon
int selectedIndex = 0;      // menu
int currentCondition = 0;   // indikat
int activeCount = 0;        // icon

PetCondition petConditions[NUM_PET_CONDITIONS] = {                                              // Массив состояний и иконок
    { HUNGRY, angry },
    { SLEEPY, slep },
    { PLAY, crying },
    { THIRSTY, hum },
    { SHIT, shit },
    { HEALTH, health },
    { COLD, cold },
    { TEMP, temp },
};
const char* menuItems[menuCount] = 
{"sensor", "debug", "status", "time", "life", "SHIT",};

PetState activeStates[MAX_ICONS];

const int conditionCount = sizeof(petConditions) / sizeof(petConditions[0]);  // Количество состояний питомца
elapsedMillis lifetimer;

void setup(){

Serial.begin(9600);

rtc.begin();
Wire.begin();
//rtc.setTime(BUILD_SEC, BUILD_MIN, BUILD_HOUR, BUILD_DAY, BUILD_MONTH, BUILD_YEAR); 

oled.init();
oled.clear();
sensor_read();
tama_init();

pinMode (VOLTAGE, INPUT);
pinMode (LASER, OUTPUT);
pinMode (SENSOR_LIGHT, INPUT);
pinMode (DIOD, OUTPUT);

pinMode(BUTTON_A, INPUT_PULLUP);
pinMode(BUTTON_B, INPUT_PULLUP);
pinMode(BUTTON_C, INPUT_PULLUP);
pinMode(BUTTON_D, INPUT_PULLUP);
oled.setScale(1);
showMenu(selectedIndex); // Отображение начального состояния меню
}

//----------------Функция инициализации состояния тамагочи--------------------------------
void tama_init()
{
	tama.state  = ST_OK;
	tama.water  = 99;
  tama.food   = 50;
  tama.health = 99;
  tama.sleep  = 99;
  tama.shit   = 99;
  tama.game   = 99;
  tama.day   = 0;
  tama.age   = 0;
  tama.happiness = 100;
  while(millis() - tama.timer < 3000){
    oled.setScale(3);
    oled.setCursor(0, 0);
    oled.print("Электро");
    oled.setCursor(0, 4);
    oled.print("Питомец");
    oled.setScale(1);
    oled.update();
  }
  tama.timer = millis();
}
//----------------Конец функции инициализации состояния тамагочи--------------------------

void loop() {
  while(true) {
  bot_loop();
  }
}
